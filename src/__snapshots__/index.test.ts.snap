// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tree module calls tree() and matches console.log snapshot 1`] = `
[
  [
    "└─ src/
   ├─ cli.ts
   ├─ index.ts
   │  └─ const ignoredPatterns
   │  └─ function tree(rootDir: string, ignored: (string | RegExp)[], visibilityLevel: VisibilityLevel): void
   └─ tests/
      ├─ class.ts
      │  └─ export default class DefaultClass
      │  └─ class NamedClass
      └─ consts.ts
         └─ const publicArray
         └─ interface PublicInterface
         └─ const publicFunction
",
  ],
]
`;

exports[`tree module calls tree() with custom ignored patterns and matches console.log snapshot 1`] = `
[
  [
    "└─ src/
   └─ tests/
      ├─ class.ts
      │  └─ export default class DefaultClass
      │  └─ class NamedClass
      └─ consts.ts
         └─ const publicArray
         └─ interface PublicInterface
         └─ const publicFunction
",
  ],
]
`;

exports[`tree module calls tree() with custom visibility level and matches console.log snapshot 1`] = `
[
  [
    "└─ src/
   ├─ cli.ts
   │  └─ private const args
   ├─ index.ts
   │  └─ const ignoredPatterns
   │  └─ private function readTsConfig(rootDir: string): ParsedCommandLine
   │  └─ private function createProgram(rootDir: string): Program
   │  └─ private function analyzeFile(sourceFile: SourceFile, typeChecker: TypeChecker, visibilityLevel: VisibilityLevel): string
   │  └─ private function traverseDirectory(dir: string, program: Program, shouldIgnore: (path: string) => boolean, visibilityLevel: VisibilityLevel, prefix: string): string
   │  └─ private function shouldIgnore(ignoredPatterns: (string | RegExp)[], pathToCheck: string): boolean
   │  └─ function tree(rootDir: string, ignored: (string | RegExp)[], visibilityLevel: VisibilityLevel): void
   └─ tests/
      ├─ class.ts
      │  └─ private const tree
      │  └─ export default class DefaultClass
      │     ├─ private constructor(baz: number[]): void
      │  └─ class NamedClass
      │     ├─ private constructor(): void
      │     ├─ private double(): void
      │     ├─ private triple(): void
      │     ├─ protected quadruple(): void
      │     ├─ private octuple(): void
      └─ consts.ts
         └─ private const privateString
         └─ private const privateNumber
         └─ private const privateBoolean
         └─ const publicArray
         └─ interface PublicInterface
         └─ private const privateFunction
         └─ const publicFunction
",
  ],
]
`;
