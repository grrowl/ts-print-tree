// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cli module calls tree() and formats as list, with custom visibility level 1`] = `
"ts-print-tree/
  - src/
    - cli.ts
      - private const args
      - private const defaultIgnore
      - private function printHelp(): void
      - private function printVersion(): void
      - const pathFilter
      - private function formatNodeName(node: TreeNode): string
      - function formatAsTree(node: TreeNode, prefix: string, isLast: boolean, isRoot: boolean): string
      - function formatAsList(node: TreeNode, depth: number): string
    - index.ts
      - interface TreeNode
      - private function readTsConfig(rootDir: string): ParsedCommandLine
      - private function createProgram(rootDir: string): Program
      - private function analyzeFile(sourceFile: SourceFile, typeChecker: TypeChecker, visibilityLevel: VisibilityLevel): TreeNode[]
      - private function traverseDirectory(dir: string, program: Program, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode
      - function tree(rootDir: string, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode
    - tests/
      - class.ts
        - private const tree
        - class DefaultClass
          - property foo
          - property bar
          - method constructor(baz: number[]): void
        - class NamedClass
          - private property version
          - method constructor(): void
          - method double(): void
          - private method triple(): void
          - protected method quadruple(): void
          - method octuple(): void
      - consts.ts
        - private const privateString
        - private const privateNumber
        - private const privateBoolean
        - const publicArray
        - interface PublicInterface
        - private const privateFunction
        - const publicFunction
"
`;

exports[`cli module calls tree() and formats as tree 1`] = `
"ts-print-tree/
└── src/
    ├── cli.ts
    │   ├── const pathFilter
    │   ├── function formatAsTree(node: TreeNode, prefix: string, isLast: boolean, isRoot: boolean): string
    │   └── function formatAsList(node: TreeNode, depth: number): string
    ├── index.ts
    │   ├── interface TreeNode
    │   └── function tree(rootDir: string, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode
    └── tests/
        ├── class.ts
        │   ├── class DefaultClass
        │   │   ├── property foo
        │   │   ├── property bar
        │   │   └── method constructor(baz: number[]): void
        │   └── class NamedClass
        │       ├── method constructor(): void
        │       ├── method double(): void
        │       └── method octuple(): void
        └── consts.ts
            ├── const publicArray
            ├── interface PublicInterface
            └── const publicFunction
"
`;

exports[`tree module calls tree() and matches result snapshot 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "Jest",
                          "type": "interface",
                          "visibility": "public",
                        },
                        {
                          "children": [
                            {
                              "name": "constructor",
                              "signature": "(config: JestEnvironmentConfig, context: EnvironmentContext): void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "global",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                            {
                              "name": "fakeTimers",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                            {
                              "name": "fakeTimersModern",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                            {
                              "name": "moduleMocker",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                            {
                              "name": "getVmContext",
                              "signature": "(): () => Context",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "setup",
                              "signature": "(): () => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "teardown",
                              "signature": "(): () => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "handleTestEvent",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                            {
                              "name": "exportConditions",
                              "signature": undefined,
                              "type": "property",
                              "visibility": "public",
                            },
                          ],
                          "name": "JestEnvironment",
                          "type": "class",
                          "visibility": "public",
                        },
                        {
                          "name": "JestEnvironmentConfig",
                          "type": "interface",
                          "visibility": "public",
                        },
                        {
                          "name": "JestImportMeta",
                          "type": "interface",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "environment/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "jestExpect",
                          "type": "const",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "expect/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "arrayBufferEquality",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "emptyObject",
                          "signature": "(obj: unknown): boolean",
                          "type": "function",
                          "visibility": "public",
                        },
                        {
                          "name": "equals",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "getObjectKeys",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "getObjectSubset",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "getPath",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "isA",
                          "signature": "(typeName: string, value: unknown): boolean",
                          "type": "function",
                          "visibility": "public",
                        },
                        {
                          "name": "isError",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "isOneline",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "iterableEquality",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "partition",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "pathAsArray",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "sparseArrayEquality",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "subsetEquality",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "TesterContext",
                          "type": "interface",
                          "visibility": "public",
                        },
                        {
                          "name": "typeEquality",
                          "type": "const",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "expect-utils/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "name": "constructor",
                              "signature": "({
    global,
    moduleMocker,
    timerConfig,
    config,
    maxLoops,
  }: { global: typeof globalThis; moduleMocker: ModuleMocker; timerConfig: TimerConfig<TimerRef>; config: StackTraceConfig; maxLoops?: number; }): void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "clearAllTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "dispose",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "reset",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "now",
                              "signature": "(): () => number",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllTicks",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllImmediates",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runOnlyPendingTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersToNextTimer",
                              "signature": "(steps: number): (steps?: number) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersByTime",
                              "signature": "(msToRun: number): (msToRun: number) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runWithRealTimers",
                              "signature": "(cb: Callback): (cb: Callback) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "useRealTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "useFakeTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "getTimerCount",
                              "signature": "(): () => number",
                              "type": "method",
                              "visibility": "public",
                            },
                          ],
                          "name": "LegacyFakeTimers",
                          "type": "class",
                          "visibility": "public",
                        },
                        {
                          "children": [
                            {
                              "name": "constructor",
                              "signature": "({
    global,
    config,
  }: { global: typeof globalThis; config: ProjectConfig; }): void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "clearAllTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "dispose",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllTimersAsync",
                              "signature": "(): () => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runOnlyPendingTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runOnlyPendingTimersAsync",
                              "signature": "(): () => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersToNextTimer",
                              "signature": "(steps: number): (steps?: number) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersToNextTimerAsync",
                              "signature": "(steps: number): (steps?: number) => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersByTime",
                              "signature": "(msToRun: number): (msToRun: number) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "advanceTimersByTimeAsync",
                              "signature": "(msToRun: number): (msToRun: number) => Promise<void>",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "runAllTicks",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "useRealTimers",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "useFakeTimers",
                              "signature": "(fakeTimersConfig: FakeTimersConfig): (fakeTimersConfig?: FakeTimersConfig) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "reset",
                              "signature": "(): () => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "setSystemTime",
                              "signature": "(now: number | Date): (now?: number | Date) => void",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "getRealSystemTime",
                              "signature": "(): () => number",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "now",
                              "signature": "(): () => number",
                              "type": "method",
                              "visibility": "public",
                            },
                            {
                              "name": "getTimerCount",
                              "signature": "(): () => number",
                              "type": "method",
                              "visibility": "public",
                            },
                          ],
                          "name": "ModernFakeTimers",
                          "type": "class",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "fake-timers/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "expect",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "it",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "test",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "fit",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "xit",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "xtest",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "describe",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "xdescribe",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "fdescribe",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "beforeAll",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "beforeEach",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "afterEach",
                          "type": "const",
                          "visibility": "public",
                        },
                        {
                          "name": "afterAll",
                          "type": "const",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "globals/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "SnapshotFormat",
                          "type": "const",
                          "visibility": "public",
                        },
                      ],
                      "name": "index.d.ts",
                      "type": "file",
                    },
                  ],
                  "name": "build/",
                  "type": "directory",
                },
              ],
              "name": "schemas/",
              "type": "directory",
            },
          ],
          "name": "@jest/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "Modifier",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Hint",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Kind",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternBoolean",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternNumber",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternString",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternBooleanExact",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternNumberExact",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PatternStringExact",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "SchemaOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TKind",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TSchema",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "NumericOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TAny",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ArrayOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TArray",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TBigInt",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TBoolean",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TComposite",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TConstructor",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "DateOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TDate",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TEnumOption",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TEnum",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TFunction",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TInteger",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "IntersectOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TIntersect",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TLiteral",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TNever",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TNot",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TNull",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TNumber",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ObjectOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TObject",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TPromise",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TRecord",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TThis",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TRecursive",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TRef",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "StringOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TString",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TSymbol",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TTemplateLiteral",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TTuple",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TUndefined",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TUnion",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Uint8ArrayOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TUint8Array",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TUnknown",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "UnsafeOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TUnsafe",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TVoid",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "schema",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constructor",
                          "signature": "(schema: unknown): void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "TypeGuardUnknownTypeError",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(message: string): void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "TemplateLiteralParserError",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "Strict",
                          "signature": "(schema: T): <T extends TSchema>(schema: T) => T",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "TypeBuilder",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "Optional",
                          "signature": "(schema: T): <T extends TSchema>(schema: T) => TOptional<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "ReadonlyOptional",
                          "signature": "(schema: T): <T extends TSchema>(schema: T) => TReadonlyOptional<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Readonly",
                          "signature": "(schema: T): <T extends TSchema>(schema: T) => TReadonly<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Any",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TAny",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Array",
                          "signature": "(items: T, options: ArrayOptions): <T extends TSchema>(items: T, options?: ArrayOptions) => TArray<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Boolean",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TBoolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Composite",
                          "signature": "(objects: [...T], options: ObjectOptions): <T extends TObject<TProperties>[]>(objects: [...T], options?: ObjectOptions) => TComposite<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Enum",
                          "signature": "(item: T, options: SchemaOptions): <T extends Record<string, string | number>>(item: T, options?: SchemaOptions) => TEnum<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Extends",
                          "signature": "(left: L, right: R, trueType: T, falseType: U, options: SchemaOptions): <L extends TSchema, R extends TSchema, T extends TSchema, U extends TSchema>(left: L, right: R, trueType: T, falseType: U, options?: SchemaOptions) => TExtends<L, R, T, U>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Exclude",
                          "signature": "(left: L, right: R, options: SchemaOptions): <L extends TSchema, R extends TSchema>(left: L, right: R, options?: SchemaOptions) => TExclude<L, R>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Extract",
                          "signature": "(left: L, right: R, options: SchemaOptions): <L extends TSchema, R extends TSchema>(left: L, right: R, options?: SchemaOptions) => TExtract<L, R>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Integer",
                          "signature": "(options: NumericOptions<number>): (options?: NumericOptions<number>) => TInteger",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Intersect",
                          "signature": "(allOf: [], options: SchemaOptions): { (allOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(allOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(allOf: [......], options?: IntersectOptions): TIntersect<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Intersect",
                          "signature": "(allOf: [...T], options: SchemaOptions): { (allOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(allOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(allOf: [......], options?: IntersectOptions): TIntersect<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Intersect",
                          "signature": "(allOf: [...T], options: IntersectOptions): { (allOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(allOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(allOf: [......], options?: IntersectOptions): TIntersect<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "KeyOf",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TSchema>(schema: T, options?: SchemaOptions) => TKeyOf<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Literal",
                          "signature": "(value: T, options: SchemaOptions): <T extends TLiteralValue>(value: T, options?: SchemaOptions) => TLiteral<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Never",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TNever",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Not",
                          "signature": "(not: N, schema: T, options: SchemaOptions): <N extends TSchema, T extends TSchema>(not: N, schema: T, options?: SchemaOptions) => TNot<N, T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Null",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TNull",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Number",
                          "signature": "(options: NumericOptions<number>): (options?: NumericOptions<number>) => TNumber",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Object",
                          "signature": "(properties: T, options: ObjectOptions): <T extends TProperties>(properties: T, options?: ObjectOptions) => TObject<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Omit",
                          "signature": "(schema: T, keys: readonly [...K], options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TOmit<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TOmit<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Omit",
                          "signature": "(schema: T, keys: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TOmit<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TOmit<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Omit",
                          "signature": "(schema: T, key: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TOmit<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TOmit<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Omit",
                          "signature": "(schema: T, key: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TOmit<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TOmit<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Partial",
                          "signature": "(schema: T, options: ObjectOptions): <T extends TSchema>(schema: T, options?: ObjectOptions) => TPartial<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Pick",
                          "signature": "(schema: T, keys: readonly [...K], options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TPick<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TPick<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Pick",
                          "signature": "(schema: T, keys: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TPick<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TPick<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Pick",
                          "signature": "(schema: T, key: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TPick<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TPick<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Pick",
                          "signature": "(schema: T, key: K, options: SchemaOptions): { <T extends TSchema, K extends (keyof Static<T, []>)[]>(schema: T, keys: readonly [...K], options?: SchemaOptions): TPick<T, K[number]>; <T extends TSchema, K extends TUnion<...>>(schema: T, keys: K, options?: SchemaOptions): TPick<...>; <T extends TSchema, K extends TLiteral<...>>(schema: T, key: K, options?: Sche...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Record",
                          "signature": "(key: K, schema: T, options: ObjectOptions): { <K extends TUnion<TLiteral<string | number>[]>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): RecordUnionLiteralType<K, T>; <K extends TLiteral<...>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): TObject<...>; <K extends TTemplateLiteral<...>, T extends TSchema>(key: K, schema: ...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Record",
                          "signature": "(key: K, schema: T, options: ObjectOptions): { <K extends TUnion<TLiteral<string | number>[]>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): RecordUnionLiteralType<K, T>; <K extends TLiteral<...>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): TObject<...>; <K extends TTemplateLiteral<...>, T extends TSchema>(key: K, schema: ...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Record",
                          "signature": "(key: K, schema: T, options: ObjectOptions): { <K extends TUnion<TLiteral<string | number>[]>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): RecordUnionLiteralType<K, T>; <K extends TLiteral<...>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): TObject<...>; <K extends TTemplateLiteral<...>, T extends TSchema>(key: K, schema: ...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Record",
                          "signature": "(key: K, schema: T, options: ObjectOptions): { <K extends TUnion<TLiteral<string | number>[]>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): RecordUnionLiteralType<K, T>; <K extends TLiteral<...>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): TObject<...>; <K extends TTemplateLiteral<...>, T extends TSchema>(key: K, schema: ...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Record",
                          "signature": "(key: K, schema: T, options: ObjectOptions): { <K extends TUnion<TLiteral<string | number>[]>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): RecordUnionLiteralType<K, T>; <K extends TLiteral<...>, T extends TSchema>(key: K, schema: T, options?: ObjectOptions): TObject<...>; <K extends TTemplateLiteral<...>, T extends TSchema>(key: K, schema: ...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Recursive",
                          "signature": "(callback: (thisType: TThis) => T, options: SchemaOptions): <T extends TSchema>(callback: (thisType: TThis) => T, options?: SchemaOptions) => TRecursive<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Ref",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TSchema>(schema: T, options?: SchemaOptions) => TRef<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Required",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TSchema>(schema: T, options?: SchemaOptions) => TRequired<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "String",
                          "signature": "(options: StringOptions<StringFormatOption | Format>): <Format extends string>(options?: StringOptions<StringFormatOption | Format>) => TString<Format>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "TemplateLiteral",
                          "signature": "(kinds: [...T], options: SchemaOptions): <T extends TTemplateLiteralKind[]>(kinds: [...T], options?: SchemaOptions) => TTemplateLiteral<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Tuple",
                          "signature": "(items: [...T], options: SchemaOptions): <T extends TSchema[]>(items: [...T], options?: SchemaOptions) => TTuple<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Union",
                          "signature": "(anyOf: [], options: SchemaOptions): { (anyOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(anyOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(anyOf: [......], options?: SchemaOptions): TUnion<...>; <T extends TTemplateLiteral<...>>(template: T): Ensure<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Union",
                          "signature": "(anyOf: [...T], options: SchemaOptions): { (anyOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(anyOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(anyOf: [......], options?: SchemaOptions): TUnion<...>; <T extends TTemplateLiteral<...>>(template: T): Ensure<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Union",
                          "signature": "(anyOf: [...T], options: SchemaOptions): { (anyOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(anyOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(anyOf: [......], options?: SchemaOptions): TUnion<...>; <T extends TTemplateLiteral<...>>(template: T): Ensure<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Union",
                          "signature": "(template: T): { (anyOf: [], options?: SchemaOptions): TNever; <T extends [TSchema]>(anyOf: [...T], options?: SchemaOptions): T[0]; <T extends TSchema[]>(anyOf: [......], options?: SchemaOptions): TUnion<...>; <T extends TTemplateLiteral<...>>(template: T): Ensure<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Unknown",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TUnknown",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Unsafe",
                          "signature": "(options: UnsafeOptions): <T>(options?: UnsafeOptions) => TUnsafe<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "StandardTypeBuilder",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "BigInt",
                          "signature": "(options: NumericOptions<bigint>): (options?: NumericOptions<bigint>) => TBigInt",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "ConstructorParameters",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TConstructor<any[], any>>(schema: T, options?: SchemaOptions) => TConstructorParameters<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Constructor",
                          "signature": "(parameters: T, returns: U, options: SchemaOptions): { <T extends TTuple<TSchema[]>, U extends TSchema>(parameters: T, returns: U, options?: SchemaOptions): TConstructor<TTupleIntoArray<T>, U>; <T extends TSchema[], U extends TSchema>(parameters: [......], returns: U, options?: SchemaOptions): TConstructor<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Constructor",
                          "signature": "(parameters: [...T], returns: U, options: SchemaOptions): { <T extends TTuple<TSchema[]>, U extends TSchema>(parameters: T, returns: U, options?: SchemaOptions): TConstructor<TTupleIntoArray<T>, U>; <T extends TSchema[], U extends TSchema>(parameters: [......], returns: U, options?: SchemaOptions): TConstructor<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Date",
                          "signature": "(options: DateOptions): (options?: DateOptions) => TDate",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Function",
                          "signature": "(parameters: T, returns: U, options: SchemaOptions): { <T extends TTuple<TSchema[]>, U extends TSchema>(parameters: T, returns: U, options?: SchemaOptions): TFunction<TTupleIntoArray<T>, U>; <T extends TSchema[], U extends TSchema>(parameters: [......], returns: U, options?: SchemaOptions): TFunction<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Function",
                          "signature": "(parameters: [...T], returns: U, options: SchemaOptions): { <T extends TTuple<TSchema[]>, U extends TSchema>(parameters: T, returns: U, options?: SchemaOptions): TFunction<TTupleIntoArray<T>, U>; <T extends TSchema[], U extends TSchema>(parameters: [......], returns: U, options?: SchemaOptions): TFunction<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "InstanceType",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TConstructor<any[], any>>(schema: T, options?: SchemaOptions) => TInstanceType<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Parameters",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TFunction<any[], any>>(schema: T, options?: SchemaOptions) => TParameters<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Promise",
                          "signature": "(item: T, options: SchemaOptions): <T extends TSchema>(item: T, options?: SchemaOptions) => TPromise<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "RegEx",
                          "signature": "(regex: RegExp, options: SchemaOptions): (regex: RegExp, options?: SchemaOptions) => TString<string>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "ReturnType",
                          "signature": "(schema: T, options: SchemaOptions): <T extends TFunction<any[], any>>(schema: T, options?: SchemaOptions) => TReturnType<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Symbol",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TSymbol",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Undefined",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TUndefined",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Uint8Array",
                          "signature": "(options: Uint8ArrayOptions): (options?: Uint8ArrayOptions) => TUint8Array",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "Void",
                          "signature": "(options: SchemaOptions): (options?: SchemaOptions) => TVoid",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "ExtendedTypeBuilder",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "StandardType",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Type",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "typebox.d.ts",
                  "type": "file",
                },
              ],
              "name": "typebox/",
              "type": "directory",
            },
          ],
          "name": "@sinclair/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "version",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "DEFAULT_EXTENSIONS",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "TransformOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TransformCaller",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "MatchPatternContext",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "transform",
                      "signature": "(code: string, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transform",
                      "signature": "(code: string, opts: TransformOptions, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transform",
                      "signature": "(code: string, opts: TransformOptions): BabelFileResult",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformSync",
                      "signature": "(code: string, opts: TransformOptions): BabelFileResult",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformAsync",
                      "signature": "(code: string, opts: TransformOptions): Promise<BabelFileResult>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFile",
                      "signature": "(filename: string, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFile",
                      "signature": "(filename: string, opts: TransformOptions, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFileSync",
                      "signature": "(filename: string, opts: TransformOptions): BabelFileResult",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFileAsync",
                      "signature": "(filename: string, opts: TransformOptions): Promise<BabelFileResult>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFromAst",
                      "signature": "(ast: Node, code: string, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFromAst",
                      "signature": "(ast: Node, code: string, opts: TransformOptions, callback: FileResultCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFromAstSync",
                      "signature": "(ast: Node, code: string, opts: TransformOptions): BabelFileResult",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "transformFromAstAsync",
                      "signature": "(ast: Node, code: string, opts: TransformOptions): Promise<BabelFileResult>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "PluginObj",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BabelFile",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "PluginPass",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BabelFileResult",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BabelFileMetadata",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BabelFileModulesMetadata",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "parse",
                      "signature": "(code: string, callback: FileParseCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "parse",
                      "signature": "(code: string, options: TransformOptions, callback: FileParseCallback): void",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "parse",
                      "signature": "(code: string, options: TransformOptions): ParseResult<File>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "parseSync",
                      "signature": "(code: string, options: TransformOptions): ParseResult<File>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "parseAsync",
                      "signature": "(code: string, options: TransformOptions): Promise<ParseResult<File>>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "loadOptions",
                      "signature": "(options: TransformOptions): object",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "loadPartialConfig",
                      "signature": "(options: TransformOptions): Readonly<PartialConfig>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "loadPartialConfigAsync",
                      "signature": "(options: TransformOptions): Promise<Readonly<PartialConfig>>",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "PartialConfig",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ConfigItem",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "resolvePlugin",
                      "signature": "(name: string, dirname: string): string",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "resolvePreset",
                      "signature": "(name: string, dirname: string): string",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "CreateConfigItemOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "createConfigItem",
                      "signature": "(value: PluginTarget | [PluginTarget, PluginOptions] | [PluginTarget, PluginOptions, string], options: CreateConfigItemOptions): ConfigItem",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "ConfigAPI",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "SimpleCacheConfigurator",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "EnvFunction",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "babel__core/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "GeneratorOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(ast: Node, opts: GeneratorOptions, code: string): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generate",
                          "signature": "(): () => GeneratorResult",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "CodeGenerator",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "generate",
                      "signature": "(ast: Node, opts: GeneratorOptions, code: string | { [filename: string]: string; }): GeneratorResult",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "GeneratorResult",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "babel__generator/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "TemplateBuilderOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TemplateBuilder",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "smart",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "statement",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "statements",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "expression",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "program",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "babel__template/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(path: NodePath<Node>, parentScope: Scope): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "uid",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "path",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "block",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "labels",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "parentBlock",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "parent",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "hub",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "bindings",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "references",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "globals",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "uids",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "data",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "crawling",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "globals",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "contextVariables",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "traverse",
                          "signature": "(node: Node | Node[], opts: TraverseOptions<S>, state: S): { <S>(node: Node | Node[], opts: TraverseOptions<S>, state: S): void; (node: Node | Node[], opts?: TraverseOptions<Node>, state?: any): void; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "traverse",
                          "signature": "(node: Node | Node[], opts: TraverseOptions<Node>, state: any): { <S>(node: Node | Node[], opts: TraverseOptions<S>, state: S): void; (node: Node | Node[], opts?: TraverseOptions<Node>, state?: any): void; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generateDeclaredUidIdentifier",
                          "signature": "(name: string): (name?: string) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generateUidIdentifier",
                          "signature": "(name: string): (name?: string) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generateUid",
                          "signature": "(name: string): (name?: string) => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generateUidIdentifierBasedOnNode",
                          "signature": "(parent: Node, defaultName: string): (parent: Node, defaultName?: string) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStatic",
                          "signature": "(node: Node): (node: Node) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "maybeGenerateMemoised",
                          "signature": "(node: Node, dontPush: boolean): (node: Node, dontPush?: boolean) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "checkBlockScopedCollisions",
                          "signature": "(local: Binding, kind: BindingKind, name: string, id: object): (local: Binding, kind: BindingKind, name: string, id: object) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "rename",
                          "signature": "(oldName: string, newName: string, block: Node): (oldName: string, newName?: string, block?: Node) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "dump",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toArray",
                          "signature": "(node: Node, i: number | boolean, arrayLikeIsIterable: boolean): (node: Node, i?: number | boolean, arrayLikeIsIterable?: boolean) => ArrayExpression | CallExpression | Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasLabel",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getLabel",
                          "signature": "(name: string): (name: string) => NodePath<LabeledStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "registerLabel",
                          "signature": "(path: NodePath<LabeledStatement>): (path: NodePath<LabeledStatement>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "registerDeclaration",
                          "signature": "(path: NodePath<Node>): (path: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "buildUndefinedNode",
                          "signature": "(): () => UnaryExpression",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "registerConstantViolation",
                          "signature": "(path: NodePath<Node>): (path: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "registerBinding",
                          "signature": "(kind: BindingKind, path: NodePath<Node>, bindingPath: NodePath<Node>): (kind: BindingKind, path: NodePath<Node>, bindingPath?: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "addGlobal",
                          "signature": "(node: Identifier | JSXIdentifier): (node: Identifier | JSXIdentifier) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasUid",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasGlobal",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasReference",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPure",
                          "signature": "(node: Node, constantsOnly: boolean): (node: Node, constantsOnly?: boolean) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "setData",
                          "signature": "(key: string, val: any): (key: string, val: any) => any",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getData",
                          "signature": "(key: string): (key: string) => any",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "removeData",
                          "signature": "(key: string): (key: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "crawl",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "push",
                          "signature": "(opts: { id: LVal; init?: Expression; unique?: boolean; _blockHoist?: number; kind?: "const" | "var" | "let"; }): (opts: { id: LVal; init?: Expression; unique?: boolean; _blockHoist?: number; kind?: "const" | "var" | "let"; }) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getProgramParent",
                          "signature": "(): () => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getFunctionParent",
                          "signature": "(): () => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBlockParent",
                          "signature": "(): () => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getPatternParent",
                          "signature": "(): () => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getAllBindings",
                          "signature": "(): () => Record<string, Binding>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getAllBindingsOfKind",
                          "signature": "(kinds: string[]): (...kinds: string[]) => Record<string, Binding>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "bindingIdentifierEquals",
                          "signature": "(name: string, node: Node): (name: string, node: Node) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBinding",
                          "signature": "(name: string): (name: string) => Binding",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOwnBinding",
                          "signature": "(name: string): (name: string) => Binding",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifier",
                          "signature": "(name: string): (name: string) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOwnBindingIdentifier",
                          "signature": "(name: string): (name: string) => Identifier",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasOwnBinding",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasBinding",
                          "signature": "(name: string, optsOrNoGlobals: boolean | { noGlobals?: boolean; noUids?: boolean; }): (name: string, optsOrNoGlobals?: boolean | { noGlobals?: boolean; noUids?: boolean; }) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "parentHasBinding",
                          "signature": "(name: string, opts: { noGlobals?: boolean; noUids?: boolean; }): (name: string, opts?: { noGlobals?: boolean; noUids?: boolean; }) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "moveBindingTo",
                          "signature": "(name: string, scope: Scope): (name: string, scope: Scope) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "removeOwnBinding",
                          "signature": "(name: string): (name: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "removeBinding",
                          "signature": "(name: string): (name: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "Scope",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(opts: { identifier: Identifier; scope: Scope; path: NodePath<Node>; kind: BindingKind; }): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "identifier",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "scope",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "path",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "kind",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "referenced",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "references",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "referencePaths",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constant",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constantViolations",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "hasDeoptedValue",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "hasValue",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "value",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "deopValue",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "setValue",
                          "signature": "(value: any): (value: any) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "clearValue",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "reassign",
                          "signature": "(path: NodePath<Node>): (path: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "reference",
                          "signature": "(path: NodePath<Node>): (path: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "dereference",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "Binding",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "VisitNodeObject",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(hub: HubInterface, parent: Node): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "parent",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "hub",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "data",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "context",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "scope",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "contexts",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "state",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "opts",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "skipKeys",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "parentPath",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "container",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "listKey",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "key",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "node",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "type",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "shouldSkip",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "shouldStop",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "removed",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "inList",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "parentKey",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "typeAnnotation",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "get",
                          "signature": "(opts: { hub?: HubInterface; parentPath: NodePath<Node>; parent: Node; container: C; key: K; }): { <C extends Node, K extends keyof C>(opts: { hub?: HubInterface; parentPath: NodePath<Node>; parent: Node; container: C; key: K; }): NodePath<C[K]>; <C extends Node, L extends NodeKeyOfArrays<...>>(opts: { ...; }): C[L] extends Node[] ? NodePath<...> : never; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "get",
                          "signature": "(opts: { hub?: HubInterface; parentPath: NodePath<Node>; parent: Node; container: C; listKey: L; key: number; }): { <C extends Node, K extends keyof C>(opts: { hub?: HubInterface; parentPath: NodePath<Node>; parent: Node; container: C; key: K; }): NodePath<C[K]>; <C extends Node, L extends NodeKeyOfArrays<...>>(opts: { ...; }): C[L] extends Node[] ? NodePath<...> : never; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getScope",
                          "signature": "(scope: Scope): (scope: Scope) => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "setData",
                          "signature": "(key: string | symbol, val: any): (key: string | symbol, val: any) => any",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getData",
                          "signature": "(key: string | symbol, def: any): (key: string | symbol, def?: any) => any",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hasNode",
                          "signature": "(): () => this is NodePath<Exclude<T, null>>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "buildCodeFrameError",
                          "signature": "(msg: string, Error: ErrorConstructor): (msg: string, Error?: ErrorConstructor) => Error",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "traverse",
                          "signature": "(visitor: TraverseOptions<T>, state: T): { <T>(visitor: TraverseOptions<T>, state: T): void; (visitor: TraverseOptions<Node>): void; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "traverse",
                          "signature": "(visitor: TraverseOptions<Node>): { <T>(visitor: TraverseOptions<T>, state: T): void; (visitor: TraverseOptions<Node>): void; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "set",
                          "signature": "(key: string, node: any): (key: string, node: any) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getPathLocation",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "debug",
                          "signature": "(buildMessage: () => string): (buildMessage: () => string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "findParent",
                          "signature": "(callback: (path: NodePath<Node>) => boolean): (callback: (path: NodePath<Node>) => boolean) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "find",
                          "signature": "(callback: (path: NodePath<Node>) => boolean): (callback: (path: NodePath<Node>) => boolean) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getFunctionParent",
                          "signature": "(): () => NodePath<Function>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getStatementParent",
                          "signature": "(): () => NodePath<Statement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getEarliestCommonAncestorFrom",
                          "signature": "(paths: NodePath<Node>[]): (paths: NodePath<Node>[]) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getDeepestCommonAncestorFrom",
                          "signature": "(paths: NodePath<Node>[], filter: (deepest: Node, i: number, ancestries: NodePath<Node>[][]) => NodePath<Node>): (paths: NodePath<Node>[], filter?: (deepest: Node, i: number, ancestries: NodePath<Node>[][]) => NodePath<Node>) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getAncestry",
                          "signature": "(): () => [this, ...NodePath<Node>[]]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAncestor",
                          "signature": "(maybeDescendant: NodePath<Node>): (maybeDescendant: NodePath<Node>) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDescendant",
                          "signature": "(maybeAncestor: NodePath<Node>): (maybeAncestor: NodePath<Node>) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "inType",
                          "signature": "(candidateTypes: string[]): (...candidateTypes: string[]) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getTypeAnnotation",
                          "signature": "(): () => FlowType | TSType",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBaseType",
                          "signature": "(baseName: string, soft: boolean): (baseName: string, soft?: boolean) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "couldBeBaseType",
                          "signature": "(name: string): (name: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "baseTypeStrictlyMatches",
                          "signature": "(rightArg: NodePath<Node>): (rightArg: NodePath<Node>) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isGenericType",
                          "signature": "(genericName: string): (genericName: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceWithMultiple",
                          "signature": "(nodes: Nodes): <Nodes extends Node | readonly Node[] | [Node, ...Node[]]>(nodes: Nodes) => NodePaths<Nodes>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceWithSourceString",
                          "signature": "(replacement: string): (replacement: string) => [NodePath<Node>]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceWith",
                          "signature": "(replacementPath: R | NodePath<R>): { <R extends Node>(replacementPath: R | NodePath<R>): [NodePath<R>]; <R extends NodePath<Node>>(replacementPath: R): [R]; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceWith",
                          "signature": "(replacementPath: R): { <R extends Node>(replacementPath: R | NodePath<R>): [NodePath<R>]; <R extends NodePath<Node>>(replacementPath: R): [R]; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceExpressionWithStatements",
                          "signature": "(nodes: Statement[]): (nodes: Statement[]) => [NodePath<ArrayExpression>] | [NodePath<ArrowFunctionExpression>] | [...] | ... 95 more ... | [...]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceInline",
                          "signature": "(nodes: Nodes): <Nodes extends Node | readonly Node[] | [Node, ...Node[]]>(nodes: Nodes) => NodePaths<Nodes>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "evaluateTruthy",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "evaluate",
                          "signature": "(): () => { confident: boolean; value: any; deopt?: NodePath<Node>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "matchesPattern",
                          "signature": "(pattern: string, allowPartial: boolean): (pattern: string, allowPartial?: boolean) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "has",
                          "signature": "(key: string): (key: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStatic",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "is",
                          "signature": "(key: string): (key: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isnt",
                          "signature": "(key: string): (key: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "equals",
                          "signature": "(key: string, value: any): (key: string, value: any) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNodeType",
                          "signature": "(type: string): (type: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "canHaveVariableDeclarationOrExpression",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "canSwapBetweenExpressionAndStatement",
                          "signature": "(replacement: Node): (replacement: Node) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isCompletionRecord",
                          "signature": "(allowInsideFunction: boolean): (allowInsideFunction?: boolean) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStatementOrBlock",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "referencesImport",
                          "signature": "(moduleSource: string, importName: string): (moduleSource: string, importName: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getSource",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "willIMaybeExecuteBefore",
                          "signature": "(target: NodePath<Node>): (target: NodePath<Node>) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "resolve",
                          "signature": "(dangerous: boolean, resolved: NodePath<Node>[]): (dangerous?: boolean, resolved?: NodePath<Node>[]) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isConstantExpression",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInStrictMode",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "call",
                          "signature": "(key: string): (key: string) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDenylisted",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBlacklisted",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "visit",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "skip",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "skipKey",
                          "signature": "(key: string): (key: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "stop",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "setScope",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "setContext",
                          "signature": "(context: TraversalContext<unknown>): (context?: TraversalContext<unknown>) => this",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "resync",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "popContext",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "pushContext",
                          "signature": "(context: TraversalContext<unknown>): (context: TraversalContext<unknown>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "requeue",
                          "signature": "(pathToQueue: NodePath<Node>): (pathToQueue?: NodePath<Node>) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "remove",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toComputedKey",
                          "signature": "(): () => PrivateName | Expression",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "arrowFunctionToShadowed",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "unwrapFunctionEnvironment",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "arrowFunctionToExpression",
                          "signature": "({
        allowInsertArrow,
        allowInsertArrowWithRest,
        /** @deprecated Use \`noNewArrows\` instead */
        specCompliant,
        noNewArrows,
    }: { allowInsertArrow?: boolean; allowInsertArrowWithRest?: boolean; specCompliant?: boolean; noNewArrows?: boolean; }): ({ allowInsertArrow, allowInsertArrowWithRest, specCompliant, noNewArrows, }?: { allowInsertArrow?: boolean; allowInsertArrowWithRest?: boolean; specCompliant?: boolean; noNewArrows?: boolean; }) => NodePath<CallExpression | FunctionDeclaration | FunctionExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "ensureBlock",
                          "signature": "(this: NodePath<CatchClause | LabeledStatement | WithStatement | Function | Loop>): (this: NodePath<CatchClause | LabeledStatement | WithStatement | Function | Loop>) => asserts this is NodePath<T & { ...; }>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "insertBefore",
                          "signature": "(nodes: Nodes): <Nodes extends NodesInsertionParam<Node>>(nodes: Nodes) => NodePaths<Nodes>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "insertAfter",
                          "signature": "(nodes: Nodes): <Nodes extends NodesInsertionParam<Node>>(nodes: Nodes) => NodePaths<Nodes>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "updateSiblingKeys",
                          "signature": "(fromIndex: number, incrementBy: number): (fromIndex: number, incrementBy: number) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "unshiftContainer",
                          "signature": "(this: NodePath<T>, listKey: K, nodes: Nodes): <T extends Node, K extends NodeKeyOfArrays<T>, Nodes extends NodesInsertionParam<NodeListType<T, K>>>(this: NodePath<...>, listKey: K, nodes: Nodes) => NodePaths<...>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "pushContainer",
                          "signature": "(this: NodePath<T>, listKey: K, nodes: Nodes): <T extends Node, K extends NodeKeyOfArrays<T>, Nodes extends NodesInsertionParam<NodeListType<T, K>>>(this: NodePath<...>, listKey: K, nodes: Nodes) => NodePaths<...>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "hoist",
                          "signature": "(scope: Scope): (scope: Scope) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOpposite",
                          "signature": "(): () => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getCompletionRecords",
                          "signature": "(): () => NodePath<Node>[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getSibling",
                          "signature": "(key: string | number): (key: string | number) => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getPrevSibling",
                          "signature": "(): () => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getNextSibling",
                          "signature": "(): () => NodePath<Node>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getAllPrevSiblings",
                          "signature": "(): () => NodePath<Node>[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getAllNextSiblings",
                          "signature": "(): () => NodePath<Node>[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "get",
                          "signature": "(key: K, context: boolean | TraversalContext<unknown>): { <K extends keyof T>(key: K, context?: boolean | TraversalContext<unknown>): NodePathResult<T[K]>; (key: string, context?: boolean | TraversalContext<unknown>): NodePath<...> | NodePath<...>[]; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "get",
                          "signature": "(key: string, context: boolean | TraversalContext<unknown>): { <K extends keyof T>(key: K, context?: boolean | TraversalContext<unknown>): NodePathResult<T[K]>; (key: string, context?: boolean | TraversalContext<unknown>): NodePath<...> | NodePath<...>[]; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifiers",
                          "signature": "(duplicates: true): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifiers",
                          "signature": "(duplicates: false): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifiers",
                          "signature": "(duplicates: boolean): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifiers",
                          "signature": "(duplicates: true): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifiers",
                          "signature": "(duplicates: false): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifiers",
                          "signature": "(duplicates: boolean): { (duplicates: true): Record<string, Identifier[]>; (duplicates?: false): Record<string, Identifier>; (duplicates?: boolean): Record<string, Identifier | Identifier[]>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifierPaths",
                          "signature": "(duplicates: true, outerOnly: boolean): { (duplicates: true, outerOnly?: boolean): Record<string, NodePath<Identifier>[]>; (duplicates?: false, outerOnly?: boolean): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifierPaths",
                          "signature": "(duplicates: false, outerOnly: boolean): { (duplicates: true, outerOnly?: boolean): Record<string, NodePath<Identifier>[]>; (duplicates?: false, outerOnly?: boolean): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBindingIdentifierPaths",
                          "signature": "(duplicates: boolean, outerOnly: boolean): { (duplicates: true, outerOnly?: boolean): Record<string, NodePath<Identifier>[]>; (duplicates?: false, outerOnly?: boolean): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifierPaths",
                          "signature": "(duplicates: true): { (duplicates: true): Record<string, NodePath<Identifier>[]>; (duplicates?: false): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifierPaths",
                          "signature": "(duplicates: false): { (duplicates: true): Record<string, NodePath<Identifier>[]>; (duplicates?: false): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOuterBindingIdentifierPaths",
                          "signature": "(duplicates: boolean, outerOnly: boolean): { (duplicates: true): Record<string, NodePath<Identifier>[]>; (duplicates?: false): Record<string, NodePath<Identifier>>; (duplicates?: boolean, outerOnly?: boolean): Record<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "shareCommentsWithSiblings",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "addComment",
                          "signature": "(type: CommentTypeShorthand, content: string, line: boolean): (type: CommentTypeShorthand, content: string, line?: boolean) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "addComments",
                          "signature": "(type: CommentTypeShorthand, comments: Comment[]): (type: CommentTypeShorthand, comments: Comment[]) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAccessor",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassAccessorProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAnyTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<AnyTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isArgumentPlaceholder",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ArgumentPlaceholder>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isArrayExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ArrayExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isArrayPattern",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ArrayPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isArrayTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ArrayTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isArrowFunctionExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ArrowFunctionExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAssignmentExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<AssignmentExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAssignmentPattern",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<AssignmentPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isAwaitExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<AwaitExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBigIntLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BigIntLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBinary",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Binary>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBinaryExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BinaryExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBindExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BindExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBlock",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Block>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBlockParent",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BlockParent>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBlockStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BlockStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBooleanLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BooleanLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBooleanLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BooleanLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBooleanTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BooleanTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBreakStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<BreakStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isCallExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<CallExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isCatchClause",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<CatchClause>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClass",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Class>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassAccessorProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassAccessorProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassImplements",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassImplements>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassMethod",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassPrivateMethod",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassPrivateMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassPrivateProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassPrivateProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isClassProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isCompletionStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<CompletionStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isConditional",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Conditional>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isConditionalExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ConditionalExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isContinueStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ContinueStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDebuggerStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DebuggerStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDecimalLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DecimalLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Declaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareClass",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareClass>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareExportAllDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareExportAllDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareFunction",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareInterface",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareInterface>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareModule",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareModule>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareModuleExports",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareModuleExports>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareOpaqueType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareOpaqueType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareTypeAlias",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareTypeAlias>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclareVariable",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclareVariable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDeclaredPredicate",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DeclaredPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDecorator",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Decorator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDirective",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Directive>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDirectiveLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DirectiveLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDoExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DoExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isDoWhileStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<DoWhileStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEmptyStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EmptyStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEmptyTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EmptyTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumBooleanBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumBooleanBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumBooleanMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumBooleanMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumDefaultedMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumDefaultedMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumNumberBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumNumberBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumNumberMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumNumberMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumStringBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumStringBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumStringMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumStringMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEnumSymbolBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<EnumSymbolBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExistsTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExistsTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportAllDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportAllDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportDefaultDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportDefaultDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportDefaultSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportDefaultSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportNamedDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportNamedDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportNamespaceSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportNamespaceSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExportSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExportSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Expression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExpressionStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExpressionStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExpressionWrapper",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExpressionWrapper>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFile",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<File>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFlow",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Flow>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFlowBaseAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FlowBaseAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFlowDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FlowDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFlowPredicate",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FlowPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFlowType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FlowType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFor",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<For>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isForInStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ForInStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isForOfStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ForOfStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isForStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ForStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isForXStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ForXStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunction",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Function>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunctionDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FunctionDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunctionExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FunctionExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunctionParent",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FunctionParent>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunctionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FunctionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isFunctionTypeParam",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<FunctionTypeParam>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isGenericTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<GenericTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Identifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isIfStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<IfStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImmutable",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Immutable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImport",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Import>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImportAttribute",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ImportAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImportDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ImportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImportDefaultSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ImportDefaultSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImportNamespaceSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ImportNamespaceSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isImportSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ImportSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<IndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInferredPredicate",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<InferredPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInterfaceDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<InterfaceDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInterfaceExtends",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<InterfaceExtends>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInterfaceTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<InterfaceTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isInterpreterDirective",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<InterpreterDirective>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isIntersectionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<IntersectionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSX",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSX>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXAttribute",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXClosingElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXClosingElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXClosingFragment",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXClosingFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXEmptyExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXEmptyExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXExpressionContainer",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXExpressionContainer>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXFragment",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXMemberExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXMemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXNamespacedName",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXNamespacedName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXOpeningElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXOpeningElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXOpeningFragment",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXOpeningFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXSpreadAttribute",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXSpreadAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXSpreadChild",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXSpreadChild>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isJSXText",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<JSXText>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isLVal",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<LVal>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isLabeledStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<LabeledStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Literal>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isLogicalExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<LogicalExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isLoop",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Loop>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMemberExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<MemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMetaProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<MetaProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMethod",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Method>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMiscellaneous",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Miscellaneous>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMixedTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<MixedTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isModuleDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ModuleDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isModuleExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ModuleExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isModuleSpecifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ModuleSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNewExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NewExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNoop",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Noop>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNullLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NullLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNullLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NullLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNullableTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NullableTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNumberLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NumberLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNumberLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NumberLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNumberTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NumberTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNumericLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<NumericLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectMethod",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectPattern",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeCallProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeCallProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeIndexer",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeIndexer>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeInternalSlot",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeInternalSlot>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isObjectTypeSpreadProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ObjectTypeSpreadProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isOpaqueType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<OpaqueType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isOptionalCallExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<OptionalCallExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isOptionalIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<OptionalIndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isOptionalMemberExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<OptionalMemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isParenthesizedExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ParenthesizedExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPattern",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Pattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPatternLike",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<PatternLike>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPipelineBareFunction",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<PipelineBareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPipelinePrimaryTopicReference",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<PipelinePrimaryTopicReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPipelineTopicExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<PipelineTopicExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPlaceholder",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Placeholder>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPrivate",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Private>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPrivateName",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<PrivateName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isProgram",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Program>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Property>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPureish",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Pureish>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isQualifiedTypeIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<QualifiedTypeIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isRecordExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<RecordExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isRegExpLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<RegExpLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isRegexLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<RegexLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isRestElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<RestElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isRestProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<RestProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isReturnStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ReturnStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isScopable",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Scopable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSequenceExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SequenceExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSpreadElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SpreadElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSpreadProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SpreadProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStandardized",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Standardized>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Statement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStaticBlock",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<StaticBlock>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStringLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<StringLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStringLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<StringLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isStringTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<StringTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSuper",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Super>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSwitchCase",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SwitchCase>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSwitchStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SwitchStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isSymbolTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<SymbolTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSAnyKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSAnyKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSArrayType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSArrayType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSAsExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSAsExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSBaseType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSBaseType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSBigIntKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSBigIntKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSBooleanKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSBooleanKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSCallSignatureDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSCallSignatureDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSConditionalType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSConditionalType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSConstructSignatureDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSConstructSignatureDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSConstructorType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSConstructorType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSDeclareFunction",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSDeclareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSDeclareMethod",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSDeclareMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSEntityName",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSEntityName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSEnumDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSEnumDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSEnumMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSEnumMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSExportAssignment",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSExportAssignment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSExpressionWithTypeArguments",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSExpressionWithTypeArguments>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSExternalModuleReference",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSExternalModuleReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSFunctionType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSFunctionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSImportEqualsDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSImportEqualsDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSImportType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSImportType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSIndexSignature",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSIndexSignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSIndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSInferType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSInferType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSInstantiationExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSInstantiationExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSInterfaceBody",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSInterfaceBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSInterfaceDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSInterfaceDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSIntersectionType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSIntersectionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSIntrinsicKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSIntrinsicKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSLiteralType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSLiteralType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSMappedType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSMappedType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSMethodSignature",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSMethodSignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSModuleBlock",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSModuleBlock>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSModuleDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSModuleDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNamedTupleMember",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNamedTupleMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNamespaceExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNamespaceExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNeverKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNeverKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNonNullExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNonNullExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNullKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNullKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSNumberKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSNumberKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSObjectKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSObjectKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSOptionalType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSOptionalType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSParameterProperty",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSParameterProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSParenthesizedType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSParenthesizedType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSPropertySignature",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSPropertySignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSQualifiedName",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSQualifiedName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSRestType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSRestType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSSatisfiesExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSSatisfiesExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSStringKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSStringKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSSymbolKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSSymbolKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSThisType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSThisType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTupleType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTupleType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeAliasDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeAliasDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeAssertion",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeAssertion>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeOperator",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeOperator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeParameter",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeParameter>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeParameterDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeParameterDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeParameterInstantiation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeParameterInstantiation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypePredicate",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypePredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeQuery",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeQuery>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSTypeReference",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSTypeReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSUndefinedKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSUndefinedKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSUnionType",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSUnionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSUnknownKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSUnknownKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTSVoidKeyword",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TSVoidKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTaggedTemplateExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TaggedTemplateExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTemplateElement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TemplateElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTemplateLiteral",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TemplateLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTerminatorless",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Terminatorless>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isThisExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ThisExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isThisTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ThisTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isThrowStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ThrowStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTopicReference",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TopicReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTryStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TryStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTupleExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TupleExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTupleTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TupleTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeAlias",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeAlias>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeCastExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeCastExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeParameter",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeParameter>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeParameterDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeParameterDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeParameterInstantiation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeParameterInstantiation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeScript",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeScript>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isTypeofTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<TypeofTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUnaryExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<UnaryExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUnaryLike",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<UnaryLike>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUnionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<UnionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUpdateExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<UpdateExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUserWhitespacable",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<UserWhitespacable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isV8IntrinsicIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<V8IntrinsicIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isVariableDeclaration",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<VariableDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isVariableDeclarator",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<VariableDeclarator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isVariance",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Variance>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isVoidTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<VoidTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isWhile",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<While>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isWhileStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<WhileStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isWithStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<WithStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isYieldExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<YieldExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBindingIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Identifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isBlockScoped",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ClassDeclaration | FunctionDeclaration | VariableDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isExistentialTypeParam",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ExistsTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isForAwaitStatement",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<ForOfStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isGenerated",
                          "signature": "(opts: object): (opts?: object) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isNumericLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isPure",
                          "signature": "(opts: object): (opts?: object) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isReferenced",
                          "signature": "(opts: object): (opts?: object) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isReferencedIdentifier",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Identifier | JSXIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isReferencedMemberExpression",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<MemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isScope",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<Pattern | Scopable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isUser",
                          "signature": "(opts: object): (opts?: object) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isVar",
                          "signature": "(opts: object): (opts?: object) => this is NodePath<VariableDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertAccessor",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassAccessorProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertAnyTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<AnyTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertArgumentPlaceholder",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ArgumentPlaceholder>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertArrayExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ArrayExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertArrayPattern",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ArrayPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertArrayTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ArrayTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertArrowFunctionExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ArrowFunctionExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertAssignmentExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<AssignmentExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertAssignmentPattern",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<AssignmentPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertAwaitExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<AwaitExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBigIntLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BigIntLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBinary",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Binary>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBinaryExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BinaryExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBindExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BindExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBlock",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Block>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBlockParent",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BlockParent>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBlockStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BlockStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBooleanLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BooleanLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBooleanLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BooleanLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBooleanTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BooleanTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertBreakStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<BreakStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertCallExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<CallExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertCatchClause",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<CatchClause>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClass",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Class>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassAccessorProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassAccessorProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassImplements",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassImplements>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassMethod",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassPrivateMethod",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassPrivateMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassPrivateProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassPrivateProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertClassProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ClassProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertCompletionStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<CompletionStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertConditional",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Conditional>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertConditionalExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ConditionalExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertContinueStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ContinueStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDebuggerStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DebuggerStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDecimalLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DecimalLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Declaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareClass",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareClass>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareExportAllDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareExportAllDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareFunction",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareInterface",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareInterface>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareModule",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareModule>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareModuleExports",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareModuleExports>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareOpaqueType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareOpaqueType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareTypeAlias",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareTypeAlias>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclareVariable",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclareVariable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDeclaredPredicate",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DeclaredPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDecorator",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Decorator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDirective",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Directive>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDirectiveLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DirectiveLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDoExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DoExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertDoWhileStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<DoWhileStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEmptyStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EmptyStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEmptyTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EmptyTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumBooleanBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumBooleanBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumBooleanMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumBooleanMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumDefaultedMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumDefaultedMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumNumberBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumNumberBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumNumberMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumNumberMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumStringBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumStringBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumStringMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumStringMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertEnumSymbolBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<EnumSymbolBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExistsTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExistsTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportAllDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportAllDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportDefaultDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportDefaultDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportDefaultSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportDefaultSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportNamedDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportNamedDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportNamespaceSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportNamespaceSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExportSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExportSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Expression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExpressionStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExpressionStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertExpressionWrapper",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ExpressionWrapper>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFile",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<File>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFlow",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Flow>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFlowBaseAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FlowBaseAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFlowDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FlowDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFlowPredicate",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FlowPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFlowType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FlowType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFor",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<For>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertForInStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ForInStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertForOfStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ForOfStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertForStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ForStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertForXStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ForXStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunction",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Function>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunctionDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FunctionDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunctionExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FunctionExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunctionParent",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FunctionParent>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunctionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FunctionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertFunctionTypeParam",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<FunctionTypeParam>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertGenericTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<GenericTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertIdentifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Identifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertIfStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<IfStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImmutable",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Immutable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImport",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Import>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImportAttribute",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ImportAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImportDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ImportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImportDefaultSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ImportDefaultSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImportNamespaceSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ImportNamespaceSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertImportSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ImportSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<IndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertInferredPredicate",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<InferredPredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertInterfaceDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<InterfaceDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertInterfaceExtends",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<InterfaceExtends>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertInterfaceTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<InterfaceTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertInterpreterDirective",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<InterpreterDirective>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertIntersectionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<IntersectionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSX",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSX>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXAttribute",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXClosingElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXClosingElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXClosingFragment",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXClosingFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXEmptyExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXEmptyExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXExpressionContainer",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXExpressionContainer>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXFragment",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXIdentifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXMemberExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXMemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXNamespacedName",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXNamespacedName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXOpeningElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXOpeningElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXOpeningFragment",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXOpeningFragment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXSpreadAttribute",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXSpreadAttribute>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXSpreadChild",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXSpreadChild>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertJSXText",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<JSXText>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertLVal",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<LVal>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertLabeledStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<LabeledStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Literal>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertLogicalExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<LogicalExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertLoop",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Loop>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertMemberExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<MemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertMetaProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<MetaProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertMethod",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Method>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertMiscellaneous",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Miscellaneous>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertMixedTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<MixedTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertModuleDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ModuleDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertModuleExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ModuleExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertModuleSpecifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ModuleSpecifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNewExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NewExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNoop",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Noop>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNullLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NullLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNullLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NullLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNullableTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NullableTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNumberLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NumberLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNumberLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NumberLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNumberTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NumberTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertNumericLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<NumericLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectMethod",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectPattern",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectPattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeCallProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeCallProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeIndexer",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeIndexer>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeInternalSlot",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeInternalSlot>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertObjectTypeSpreadProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ObjectTypeSpreadProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertOpaqueType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<OpaqueType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertOptionalCallExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<OptionalCallExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertOptionalIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<OptionalIndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertOptionalMemberExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<OptionalMemberExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertParenthesizedExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ParenthesizedExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPattern",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Pattern>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPatternLike",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<PatternLike>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPipelineBareFunction",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<PipelineBareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPipelinePrimaryTopicReference",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<PipelinePrimaryTopicReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPipelineTopicExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<PipelineTopicExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPlaceholder",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Placeholder>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPrivate",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Private>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPrivateName",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<PrivateName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertProgram",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Program>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Property>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertPureish",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Pureish>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertQualifiedTypeIdentifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<QualifiedTypeIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertRecordExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<RecordExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertRegExpLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<RegExpLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertRegexLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<RegexLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertRestElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<RestElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertRestProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<RestProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertReturnStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ReturnStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertScopable",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Scopable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSequenceExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SequenceExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSpreadElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SpreadElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSpreadProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SpreadProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStandardized",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Standardized>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Statement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStaticBlock",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<StaticBlock>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStringLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<StringLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStringLiteralTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<StringLiteralTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertStringTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<StringTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSuper",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Super>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSwitchCase",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SwitchCase>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSwitchStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SwitchStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertSymbolTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<SymbolTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSAnyKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSAnyKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSArrayType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSArrayType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSAsExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSAsExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSBaseType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSBaseType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSBigIntKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSBigIntKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSBooleanKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSBooleanKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSCallSignatureDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSCallSignatureDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSConditionalType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSConditionalType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSConstructSignatureDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSConstructSignatureDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSConstructorType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSConstructorType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSDeclareFunction",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSDeclareFunction>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSDeclareMethod",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSDeclareMethod>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSEntityName",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSEntityName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSEnumDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSEnumDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSEnumMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSEnumMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSExportAssignment",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSExportAssignment>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSExpressionWithTypeArguments",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSExpressionWithTypeArguments>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSExternalModuleReference",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSExternalModuleReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSFunctionType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSFunctionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSImportEqualsDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSImportEqualsDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSImportType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSImportType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSIndexSignature",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSIndexSignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSIndexedAccessType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSIndexedAccessType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSInferType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSInferType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSInstantiationExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSInstantiationExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSInterfaceBody",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSInterfaceBody>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSInterfaceDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSInterfaceDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSIntersectionType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSIntersectionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSIntrinsicKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSIntrinsicKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSLiteralType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSLiteralType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSMappedType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSMappedType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSMethodSignature",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSMethodSignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSModuleBlock",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSModuleBlock>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSModuleDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSModuleDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNamedTupleMember",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNamedTupleMember>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNamespaceExportDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNamespaceExportDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNeverKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNeverKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNonNullExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNonNullExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNullKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNullKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSNumberKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSNumberKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSObjectKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSObjectKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSOptionalType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSOptionalType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSParameterProperty",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSParameterProperty>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSParenthesizedType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSParenthesizedType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSPropertySignature",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSPropertySignature>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSQualifiedName",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSQualifiedName>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSRestType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSRestType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSSatisfiesExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSSatisfiesExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSStringKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSStringKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSSymbolKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSSymbolKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSThisType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSThisType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTupleType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTupleType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeAliasDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeAliasDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeAssertion",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeAssertion>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeOperator",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeOperator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeParameter",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeParameter>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeParameterDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeParameterDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeParameterInstantiation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeParameterInstantiation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypePredicate",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypePredicate>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeQuery",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeQuery>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSTypeReference",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSTypeReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSUndefinedKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSUndefinedKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSUnionType",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSUnionType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSUnknownKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSUnknownKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTSVoidKeyword",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TSVoidKeyword>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTaggedTemplateExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TaggedTemplateExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTemplateElement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TemplateElement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTemplateLiteral",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TemplateLiteral>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTerminatorless",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Terminatorless>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertThisExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ThisExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertThisTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ThisTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertThrowStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<ThrowStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTopicReference",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TopicReference>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTryStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TryStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTupleExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TupleExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTupleTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TupleTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeAlias",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeAlias>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeCastExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeCastExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeParameter",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeParameter>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeParameterDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeParameterDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeParameterInstantiation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeParameterInstantiation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeScript",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeScript>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertTypeofTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<TypeofTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertUnaryExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<UnaryExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertUnaryLike",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<UnaryLike>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertUnionTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<UnionTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertUpdateExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<UpdateExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertUserWhitespacable",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<UserWhitespacable>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertV8IntrinsicIdentifier",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<V8IntrinsicIdentifier>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertVariableDeclaration",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<VariableDeclaration>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertVariableDeclarator",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<VariableDeclarator>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertVariance",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<Variance>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertVoidTypeAnnotation",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<VoidTypeAnnotation>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertWhile",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<While>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertWhileStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<WhileStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertWithStatement",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<WithStatement>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "assertYieldExpression",
                          "signature": "(opts: object): (opts?: object) => asserts this is NodePath<YieldExpression>",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "NodePath",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "HubInterface",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getCode",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getScope",
                          "signature": "(): () => Scope",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "addHelper",
                          "signature": "(name: string): (name: string) => any",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "buildError",
                          "signature": "(node: Node, msg: string, Error: ErrorConstructor): (node: Node, msg: string, Error?: ErrorConstructor) => Error",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "Hub",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "TraversalContext",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "VirtualTypeAliases",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "babel__traverse/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "gracefulify",
                      "signature": "(fsModule: T): T",
                      "type": "function",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "graceful-fs/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "CoverageSummaryData",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(data: CoverageSummary | CoverageSummaryData): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "merge",
                          "signature": "(obj: CoverageSummary): (obj: CoverageSummary) => CoverageSummary",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toJSON",
                          "signature": "(): () => CoverageSummaryData",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isEmpty",
                          "signature": "(): () => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "data",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "lines",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "statements",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "branches",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "functions",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                      ],
                      "name": "CoverageSummary",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "CoverageMapData",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(data: CoverageMapData | CoverageMap): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "addFileCoverage",
                          "signature": "(pathOrObject: string | FileCoverage | FileCoverageData): (pathOrObject: string | FileCoverage | FileCoverageData) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "files",
                          "signature": "(): () => string[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "fileCoverageFor",
                          "signature": "(filename: string): (filename: string) => FileCoverage",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "filter",
                          "signature": "(callback: (key: string) => boolean): (callback: (key: string) => boolean) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getCoverageSummary",
                          "signature": "(): () => CoverageSummary",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "merge",
                          "signature": "(data: CoverageMapData | CoverageMap): (data: CoverageMapData | CoverageMap) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toJSON",
                          "signature": "(): () => CoverageMapData",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "data",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                      ],
                      "name": "CoverageMap",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "Location",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Range",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BranchMapping",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "FunctionMapping",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "FileCoverageData",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Totals",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Coverage",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(data: string | FileCoverage | FileCoverageData): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "merge",
                          "signature": "(other: FileCoverageData): (other: FileCoverageData) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getBranchCoverageByLine",
                          "signature": "(): () => { [line: number]: Coverage; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getLineCoverage",
                          "signature": "(): () => { [line: number]: number; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getUncoveredLines",
                          "signature": "(): () => number[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "resetHits",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "computeBranchTotals",
                          "signature": "(): () => Totals",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "computeSimpleTotals",
                          "signature": "(): () => Totals",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toSummary",
                          "signature": "(): () => CoverageSummary",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toJSON",
                          "signature": "(): () => object",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "data",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "path",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "statementMap",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "fnMap",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "branchMap",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "s",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "f",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "b",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                      ],
                      "name": "FileCoverage",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "classes",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "createCoverageMap",
                      "signature": "(data: CoverageMapData | CoverageMap): CoverageMap",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "createCoverageSummary",
                      "signature": "(obj: CoverageSummary | CoverageSummaryData): CoverageSummary",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "createFileCoverage",
                      "signature": "(pathOrObject: string | FileCoverage | FileCoverageData): FileCoverage",
                      "type": "function",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "istanbul-lib-coverage/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "createContext",
                      "signature": "(options: Partial<ContextOptions>): Context",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "getDefaultWatermarks",
                      "signature": "(): Watermarks",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(options: Partial<ReportBaseOptions>): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "execute",
                          "signature": "(context: Context): (context: Context) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "ReportBase",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "ReportBaseOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ContextOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Context",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "colorize",
                          "signature": "(str: string, clazz: string): (str: string, clazz?: string) => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "println",
                          "signature": "(str: string): (str: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "close",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "ContentWriter",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(fileDescriptor: number): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "write",
                          "signature": "(str: string): (str: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "FileContentWriter",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "write",
                          "signature": "(str: string): (str: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "ConsoleWriter",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(baseDir: string): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "startCapture",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "stopCapture",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getOutput",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "resetOutput",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "writeForDir",
                          "signature": "(subdir: string): (subdir: string) => FileWriter",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "copyFile",
                          "signature": "(source: string, dest: string, header: string): (source: string, dest: string, header?: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "writeFile",
                          "signature": "(file: string): (file: string) => ContentWriter",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "FileWriter",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "XmlWriter",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Watermarks",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Node",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ReportNode",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Visitor",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "Tree",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "istanbul-lib-report/",
              "type": "directory",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "create",
                      "signature": "(name: T, options: Partial<ReportOptions[T]>): ReportBase",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "FileOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ProjectOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "ReportOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "CloverOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "CoberturaOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "HtmlSpaOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "HtmlOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "LcovOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "LcovOnlyOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TeamcityOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "TextOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "LinkMapper",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "istanbul-reports/",
              "type": "directory",
            },
          ],
          "name": "@types/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "$$typeof",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constructor",
                          "signature": "(sample: T, inverse: boolean): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "asymmetricMatch",
                          "signature": "(other: unknown): (other: unknown) => boolean",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toString",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getExpectedType",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "toAsymmetricMatcher",
                          "signature": "(): () => string",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "AsymmetricMatcher",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "AsymmetricMatchers",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "BaseExpect",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "matcherResult",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                      ],
                      "name": "JestAssertionError",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "Matchers",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "MatcherState",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "MatcherUtils",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "expect/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "name": "0",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "1",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constructor",
                          "signature": "(op: number, text: string): void",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "Diff",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "diff",
                      "signature": "(a: any, b: any, options: DiffOptions): string",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "DIFF_DELETE",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "DIFF_EQUAL",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "DIFF_INSERT",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diffLinesRaw",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diffLinesUnified",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diffLinesUnified2",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diffStringsRaw",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diffStringsUnified",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "jest-diff/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "BOLD_WEIGHT",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "diff",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "DIM_COLOR",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "ensureActualIsNumber",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "ensureExpectedIsNonNegativeInteger",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "ensureExpectedIsNumber",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "ensureNoExpected",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "ensureNumbers",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "EXPECTED_COLOR",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "getLabelPrinter",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "highlightTrailingWhitespace",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "INVERTED_COLOR",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "matcherErrorMessage",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "matcherHint",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "pluralize",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "printDiffOrStringify",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "printExpected",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "printReceived",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "printWithType",
                      "signature": "(name: string, value: T, print: (value: T) => string): string",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "RECEIVED_COLOR",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "replaceMatchedToAsymmetricMatcher",
                      "signature": "(replacedExpected: unknown, replacedReceived: unknown, expectedCycles: unknown[], receivedCycles: unknown[]): { replacedExpected: unknown; replacedReceived: unknown; }",
                      "type": "function",
                      "visibility": "public",
                    },
                    {
                      "name": "stringify",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "SUGGEST_TO_CONTAIN_EQUAL",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "jest-matcher-utils/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "formatExecError",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "formatPath",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "formatResultsErrors",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "formatStackTrace",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Frame",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "getStackTraceLines",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "getTopFrame",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "indentAllLines",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "separateMessageFromStack",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "jest-message-util/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "fn",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Mock",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "mocked",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "MockInstance",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "constructor",
                          "signature": "(global: typeof globalThis): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "generateFromMetadata",
                          "signature": "(metadata: MockMetadata<T, MockMetadataType>): <T>(metadata: MockMetadata<T, MockMetadataType>) => Mocked<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getMetadata",
                          "signature": "(component: T, _refs: Map<T, number>): <T = unknown>(component: T, _refs?: Map<T, number>) => MockMetadata<T, MockMetadataType>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMockFunction",
                          "signature": "(fn: MockInstance<T>): { <T extends FunctionLike = UnknownFunction>(fn: MockInstance<T>): fn is MockInstance<T>; <P extends unknown[], R>(fn: (...args: P) => R): fn is Mock<(...args: P) => R>; (fn: unknown): fn is Mock<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMockFunction",
                          "signature": "(fn: (...args: P) => R): { <T extends FunctionLike = UnknownFunction>(fn: MockInstance<T>): fn is MockInstance<T>; <P extends unknown[], R>(fn: (...args: P) => R): fn is Mock<(...args: P) => R>; (fn: unknown): fn is Mock<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "isMockFunction",
                          "signature": "(fn: unknown): { <T extends FunctionLike = UnknownFunction>(fn: MockInstance<T>): fn is MockInstance<T>; <P extends unknown[], R>(fn: (...args: P) => R): fn is Mock<(...args: P) => R>; (fn: unknown): fn is Mock<...>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "fn",
                          "signature": "(implementation: T): <T extends FunctionLike = UnknownFunction>(implementation?: T) => Mock<T>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "spyOn",
                          "signature": "(object: T, methodKey: K, accessType: A): { <T extends object, K extends Exclude<keyof T, keyof { [K in keyof T as Required<T>[K] extends ClassLike ? K : never]: T[K]; } | keyof { [K in keyof T as Required<T>[K] extends FunctionLike ? K : never]: T[K]; }>, V extends Required<...>[K], A extends "get" | "set">(object: T, methodKey: K, accessType: A): A extend...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "spyOn",
                          "signature": "(object: T, methodKey: K): { <T extends object, K extends Exclude<keyof T, keyof { [K in keyof T as Required<T>[K] extends ClassLike ? K : never]: T[K]; } | keyof { [K in keyof T as Required<T>[K] extends FunctionLike ? K : never]: T[K]; }>, V extends Required<...>[K], A extends "get" | "set">(object: T, methodKey: K, accessType: A): A extend...",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "replaceProperty",
                          "signature": "(object: T, propertyKey: K, value: T[K]): <T extends object, K extends keyof T>(object: T, propertyKey: K, value: T[K]) => Replaced<T[K]>",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "clearAllMocks",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "resetAllMocks",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "restoreAllMocks",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "mocked",
                          "signature": "(source: T, options: { shallow: false; }): { <T extends object>(source: T, options?: { shallow: false; }): Mocked<T>; <T extends object>(source: T, options: { shallow: true; }): MockedShallow<T>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "mocked",
                          "signature": "(source: T, options: { shallow: true; }): { <T extends object>(source: T, options?: { shallow: false; }): Mocked<T>; <T extends object>(source: T, options: { shallow: true; }): MockedShallow<T>; }",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "ModuleMocker",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "Replaced",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "replaceProperty",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "SpyInstance",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "spyOn",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "jest-mock/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "addSerializer",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "buildSnapshotResolver",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "cleanup",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Context",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "EXTENSION",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "getSerializers",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "isSnapshotPath",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "SnapshotMatchers",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "children": [
                        {
                          "name": "snapshotFormat",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "added",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "expand",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "matched",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "unmatched",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "updated",
                          "signature": undefined,
                          "type": "property",
                          "visibility": "public",
                        },
                        {
                          "name": "constructor",
                          "signature": "(snapshotPath: string, options: SnapshotStateOptions): void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "markSnapshotsAsCheckedForTest",
                          "signature": "(testName: string): (testName: string) => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "clear",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "save",
                          "signature": "(): () => SaveStatus",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getUncheckedCount",
                          "signature": "(): () => number",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "getUncheckedKeys",
                          "signature": "(): () => string[]",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "removeUncheckedKeys",
                          "signature": "(): () => void",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "match",
                          "signature": "({
    testName,
    received,
    key,
    inlineSnapshot,
    isInline,
    error,
  }: SnapshotMatchOptions): ({ testName, received, key, inlineSnapshot, isInline, error, }: SnapshotMatchOptions) => SnapshotReturnOptions",
                          "type": "method",
                          "visibility": "public",
                        },
                        {
                          "name": "fail",
                          "signature": "(testName: string, _received: unknown, key: string): (testName: string, _received: unknown, key?: string) => string",
                          "type": "method",
                          "visibility": "public",
                        },
                      ],
                      "name": "SnapshotState",
                      "type": "class",
                      "visibility": "public",
                    },
                    {
                      "name": "toMatchInlineSnapshot",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "toMatchSnapshot",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "toThrowErrorMatchingInlineSnapshot",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "toThrowErrorMatchingSnapshot",
                      "type": "const",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "jest-snapshot/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "DEFAULT_OPTIONS",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "Options",
                      "type": "interface",
                      "visibility": "public",
                    },
                    {
                      "name": "plugins",
                      "type": "const",
                      "visibility": "public",
                    },
                    {
                      "name": "PrettyFormatOptions",
                      "type": "interface",
                      "visibility": "public",
                    },
                  ],
                  "name": "index.d.ts",
                  "type": "file",
                },
              ],
              "name": "build/",
              "type": "directory",
            },
          ],
          "name": "pretty-format/",
          "type": "directory",
        },
        {
          "children": [
            {
              "children": [
                {
                  "name": "CacheStorage",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "Cache",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "CacheQueryOptions",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "MultiCacheQueryOptions",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "caches",
                  "type": "const",
                  "visibility": "public",
                },
              ],
              "name": "cache.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(url: string | URL, options: Options): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "pipelining",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "closed",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "destroyed",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "Client",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "client.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "parseMIMEType",
                  "signature": "(input: string): "failure" | MIMEType",
                  "type": "function",
                  "visibility": "public",
                },
                {
                  "name": "serializeAMimeType",
                  "signature": "(mimeType: MIMEType): string",
                  "type": "function",
                  "visibility": "public",
                },
              ],
              "name": "content-type.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "Cookie",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "deleteCookie",
                  "signature": "(headers: Headers, name: string, attributes: { name?: string; domain?: string; }): void",
                  "type": "function",
                  "visibility": "public",
                },
                {
                  "name": "getCookies",
                  "signature": "(headers: Headers): Record<string, string>",
                  "type": "function",
                  "visibility": "public",
                },
                {
                  "name": "getSetCookies",
                  "signature": "(headers: Headers): Cookie[]",
                  "type": "function",
                  "visibility": "public",
                },
                {
                  "name": "setCookie",
                  "signature": "(headers: Headers, cookie: Cookie): void",
                  "type": "function",
                  "visibility": "public",
                },
              ],
              "name": "cookies.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "fetch",
                  "signature": "(input: RequestInfo, init: RequestInit): Promise<Response>",
                  "type": "function",
                  "visibility": "public",
                },
                {
                  "name": "BodyMixin",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "SpecIterator",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "SpecIterableIterator",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "SpecIterable",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(init: HeadersInit): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "append",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "delete",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "get",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "has",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "set",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "getSetCookie",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "forEach",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "keys",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "values",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "entries",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "[Symbol.iterator]",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "Headers",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "name": "RequestInit",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(input: RequestInfo, init: RequestInit): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "cache",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "credentials",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "destination",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "headers",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "integrity",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "method",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "mode",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "redirect",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "referrerPolicy",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "url",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "keepalive",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "signal",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "duplex",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "body",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "bodyUsed",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "arrayBuffer",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "blob",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "formData",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "json",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "text",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "clone",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "Request",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "name": "ResponseInit",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(body: BodyInit, init: ResponseInit): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "headers",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "ok",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "status",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "statusText",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "type",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "url",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "redirected",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "body",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "bodyUsed",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "arrayBuffer",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "blob",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "formData",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "json",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "text",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "clone",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "error",
                      "signature": "(): () => Response",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "json",
                      "signature": "(data: any, init: ResponseInit): (data: any, init?: ResponseInit) => Response",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "redirect",
                      "signature": "(url: string | URL, status: ResponseRedirectStatus): (url: string | URL, status: ResponseRedirectStatus) => Response",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "Response",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "fetch.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "BlobPropertyBag",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "FilePropertyBag",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(fileBits: readonly (string | Blob | ArrayBufferView)[], fileName: string, options: FilePropertyBag): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "name",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "lastModified",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "[Symbol.toStringTag]",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "File",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "file.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "__proto__",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "constructor",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "readAsArrayBuffer",
                      "signature": "(blob: Blob): (blob: Blob) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "readAsBinaryString",
                      "signature": "(blob: Blob): (blob: Blob) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "readAsText",
                      "signature": "(blob: Blob, encoding: string): (blob: Blob, encoding?: string) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "readAsDataURL",
                      "signature": "(blob: Blob): (blob: Blob) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "abort",
                      "signature": "(): () => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "EMPTY",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "LOADING",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "DONE",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "EMPTY",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "LOADING",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "DONE",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "readyState",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "result",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "error",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onloadstart",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onprogress",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onload",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onabort",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onerror",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "onloadend",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "FileReader",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "name": "ProgressEventInit",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "__proto__",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "constructor",
                      "signature": "(type: string, eventInitDict: ProgressEventInit): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "lengthComputable",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "loaded",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "total",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "ProgressEvent",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "filereader.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "append",
                      "signature": "(name: string, value: unknown, fileName: string): (name: string, value: unknown, fileName?: string) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "set",
                      "signature": "(name: string, value: unknown, fileName: string): (name: string, value: unknown, fileName?: string) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "get",
                      "signature": "(name: string): (name: string) => FormDataEntryValue",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "getAll",
                      "signature": "(name: string): (name: string) => FormDataEntryValue[]",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "has",
                      "signature": "(name: string): (name: string) => boolean",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "delete",
                      "signature": "(name: string): (name: string) => void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "forEach",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "keys",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "values",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "entries",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "[Symbol.iterator]",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "[Symbol.toStringTag]",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                  ],
                  "name": "FormData",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "formdata.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(dispatch: Dispatcher, maxRedirections: number, opts: DispatchOptions, handler: DispatchHandlers): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "RedirectHandler",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(handler: DispatchHandlers): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "DecoratorHandler",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "handlers.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "createRedirectInterceptor",
                  "signature": "(opts: RedirectInterceptorOpts): DispatchInterceptor",
                  "type": "function",
                  "visibility": "public",
                },
              ],
              "name": "interceptors.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "EventInit",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "EventListenerOptions",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "AddEventListenerOptions",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "EventListenerObject",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "EventListener",
                  "type": "interface",
                  "visibility": "public",
                },
              ],
              "name": "patch.d.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "WebSocket",
                  "type": "const",
                  "visibility": "public",
                },
                {
                  "name": "CloseEvent",
                  "type": "const",
                  "visibility": "public",
                },
                {
                  "name": "MessageEvent",
                  "type": "const",
                  "visibility": "public",
                },
              ],
              "name": "websocket.d.ts",
              "type": "file",
            },
          ],
          "name": "undici-types/",
          "type": "directory",
        },
      ],
      "name": "node_modules/",
      "type": "directory",
    },
    {
      "children": [
        {
          "children": [
            {
              "name": "pathFilter",
              "type": "const",
              "visibility": "public",
            },
            {
              "name": "formatAsTree",
              "signature": "(node: TreeNode, prefix: string, isLast: boolean, isRoot: boolean): string",
              "type": "function",
              "visibility": "public",
            },
            {
              "name": "formatAsList",
              "signature": "(node: TreeNode, depth: number): string",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "cli.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "name": "TreeNode",
              "type": "interface",
              "visibility": "public",
            },
            {
              "name": "tree",
              "signature": "(rootDir: string, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "index.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "foo",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "bar",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "constructor",
                      "signature": "(baz: number[]): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "DefaultClass",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "double",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "octuple",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "NamedClass",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "class.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "publicArray",
                  "type": "const",
                  "visibility": "public",
                },
                {
                  "name": "PublicInterface",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "publicFunction",
                  "type": "const",
                  "visibility": "public",
                },
              ],
              "name": "consts.ts",
              "type": "file",
            },
          ],
          "name": "tests/",
          "type": "directory",
        },
      ],
      "name": "src/",
      "type": "directory",
    },
  ],
  "name": "ts-print-tree/",
  "type": "directory",
}
`;

exports[`tree module calls tree() with custom ignored patterns and matches result snapshot 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "name": "pathFilter",
              "type": "const",
              "visibility": "public",
            },
            {
              "name": "formatAsTree",
              "signature": "(node: TreeNode, prefix: string, isLast: boolean, isRoot: boolean): string",
              "type": "function",
              "visibility": "public",
            },
            {
              "name": "formatAsList",
              "signature": "(node: TreeNode, depth: number): string",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "cli.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "name": "TreeNode",
              "type": "interface",
              "visibility": "public",
            },
            {
              "name": "tree",
              "signature": "(rootDir: string, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "index.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "name": "foo",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "bar",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "constructor",
                      "signature": "(baz: number[]): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "DefaultClass",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "constructor",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "double",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "octuple",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "NamedClass",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "class.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "publicArray",
                  "type": "const",
                  "visibility": "public",
                },
                {
                  "name": "PublicInterface",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "publicFunction",
                  "type": "const",
                  "visibility": "public",
                },
              ],
              "name": "consts.ts",
              "type": "file",
            },
          ],
          "name": "tests/",
          "type": "directory",
        },
      ],
      "name": "src/",
      "type": "directory",
    },
  ],
  "name": "ts-print-tree/",
  "type": "directory",
}
`;

exports[`tree module calls tree() with custom visibility level and matches result snapshot 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "name": "args",
              "type": "const",
              "visibility": "private",
            },
            {
              "name": "defaultIgnore",
              "type": "const",
              "visibility": "private",
            },
            {
              "name": "printHelp",
              "signature": "(): void",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "printVersion",
              "signature": "(): void",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "pathFilter",
              "type": "const",
              "visibility": "public",
            },
            {
              "name": "formatNodeName",
              "signature": "(node: TreeNode): string",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "formatAsTree",
              "signature": "(node: TreeNode, prefix: string, isLast: boolean, isRoot: boolean): string",
              "type": "function",
              "visibility": "public",
            },
            {
              "name": "formatAsList",
              "signature": "(node: TreeNode, depth: number): string",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "cli.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "name": "TreeNode",
              "type": "interface",
              "visibility": "public",
            },
            {
              "name": "readTsConfig",
              "signature": "(rootDir: string): ParsedCommandLine",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "createProgram",
              "signature": "(rootDir: string): Program",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "analyzeFile",
              "signature": "(sourceFile: SourceFile, typeChecker: TypeChecker, visibilityLevel: VisibilityLevel): TreeNode[]",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "traverseDirectory",
              "signature": "(dir: string, program: Program, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode",
              "type": "function",
              "visibility": "private",
            },
            {
              "name": "tree",
              "signature": "(rootDir: string, pathFilter: (path: string) => boolean, visibilityLevel: VisibilityLevel): TreeNode",
              "type": "function",
              "visibility": "public",
            },
          ],
          "name": "index.ts",
          "type": "file",
        },
        {
          "children": [
            {
              "children": [
                {
                  "name": "tree",
                  "type": "const",
                  "visibility": "private",
                },
                {
                  "children": [
                    {
                      "name": "foo",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "bar",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "public",
                    },
                    {
                      "name": "constructor",
                      "signature": "(baz: number[]): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "DefaultClass",
                  "type": "class",
                  "visibility": "public",
                },
                {
                  "children": [
                    {
                      "name": "version",
                      "signature": undefined,
                      "type": "property",
                      "visibility": "private",
                    },
                    {
                      "name": "constructor",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "double",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                    {
                      "name": "triple",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "private",
                    },
                    {
                      "name": "quadruple",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "protected",
                    },
                    {
                      "name": "octuple",
                      "signature": "(): void",
                      "type": "method",
                      "visibility": "public",
                    },
                  ],
                  "name": "NamedClass",
                  "type": "class",
                  "visibility": "public",
                },
              ],
              "name": "class.ts",
              "type": "file",
            },
            {
              "children": [
                {
                  "name": "privateString",
                  "type": "const",
                  "visibility": "private",
                },
                {
                  "name": "privateNumber",
                  "type": "const",
                  "visibility": "private",
                },
                {
                  "name": "privateBoolean",
                  "type": "const",
                  "visibility": "private",
                },
                {
                  "name": "publicArray",
                  "type": "const",
                  "visibility": "public",
                },
                {
                  "name": "PublicInterface",
                  "type": "interface",
                  "visibility": "public",
                },
                {
                  "name": "privateFunction",
                  "type": "const",
                  "visibility": "private",
                },
                {
                  "name": "publicFunction",
                  "type": "const",
                  "visibility": "public",
                },
              ],
              "name": "consts.ts",
              "type": "file",
            },
          ],
          "name": "tests/",
          "type": "directory",
        },
      ],
      "name": "src/",
      "type": "directory",
    },
  ],
  "name": "ts-print-tree/",
  "type": "directory",
}
`;
